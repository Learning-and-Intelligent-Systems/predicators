# Additional info associated with the map.
---
spot-home-pose:
  x: 1.8
  y: 0.85
  angle: 0.0
# The info below is used to transform april tag x, y, z detections into object
# x, y, z. For example, if a tag is hanging off the side of a table, we would
# want to use the center of the table as the origin of the table object.
april-tag-offsets:
  tag-408:  # smooth table
    x: 0.25
    y: 0.1
    z: -0.2
  tag-409:  # sticky table
    x: 0.25
    y: -0.1
    z: -0.2
# Allowed regions. Each region is defined by a set of points
# that form the boundary of the region. We will check
# whether a pose is within the region by checking whether the
# robot will be within the convex hull of these boundary
# points.
allowed-regions:
  main-room-rightmost-strip:
    - [0.65, -0.37]
    - [3.5, -0.26]
    - [3.4, -0.98]
    - [0.72, -0.9] 
  main-room-main-part:
    - [0.059, -0.29]
    - [3.5, -0.16]
    - [3.6, 2.7]
    - [0.1, 2.1]
# Known immovable objects. Assuming default rotations.
known-immovable-objects:
  floor:
    x: 1.84
    y: 0.85
    z: -0.5
  smooth_table:
    x: 3.2
    y: 0.74
    z: -0.1
  drafting_table:
    x: 2.5
    y: 2.65
    z: -0.05
# Static object features, including the shapes and sizes of known objects.
static-object-features:
  smooth_table:
    shape: 2  # cylinder
    height: 0.43
    length: 0.51
    width: 0.51
    flat_top_surface: 1
  drafting_table:
    shape: 1  # cuboid
    height: 0.47
    length: 0.4
    width: 0.6
    flat_top_surface: 1
    placeable: 1  # true, can be placed
  floor:
    shape: 1
    height: 0.0001
    length: 10000000  # effectively infinite
    width: 10000000
    flat_top_surface: 0
  cup:
    shape: 2 # cylinder
    height: 0.05
    length: 0.15
    width: 0.15
    placeable: 1
  ball:
    shape: 2 # cylinder
    height: 0.06
    length: 0.06
    width: 0.06
    placeable: 1 

