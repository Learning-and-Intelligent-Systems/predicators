# Additional info associated with the map.
---
spot-home-pose:
  x: 1.611
  y: -0.130
  angle: -1.5090486741635791
# The info below is used to transform april tag x, y, z detections into object
# x, y, z. For example, if a tag is hanging off the side of a table, we would
# want to use the center of the table as the origin of the table object.
april-tag-offsets:
  tag-408:  # smooth table
    x: 0.25
    y: 0.1
    z: -0.2
  tag-409:  # sticky table
    x: 0.25
    y: -0.1
    z: -0.2
# Allowed regions. Each region is defined by a set of points
# that form the boundary of the region. We will check
# whether a pose is within the region by checking whether the
# robot will be within the convex hull of these boundary
# points.
allowed-regions:
  main-room-rightmost-strip:
    - [-0.033, 0.79]
    - [0.13, -1.9]
    - [0.75, -1.9]
    - [0.66, 0.77]
  main-room-main-part:
    - [3.5, -1.9]
    - [3.2, 1.3]
    - [0.6, 1.4]
    - [0.83, -1.9]
    
# Known immovable objects. Assuming default rotations.
known-immovable-objects:
  floor:
    x: 1.611
    y: -0.130
    z: -0.5
  drafting_table:
    x: 3.61326
    y: -0.908403
    z: -0.25
    yaw: -1.55
# Static object features, including the shapes and sizes of known objects.
static-object-features:
  drafting_table:
    shape: 1  # cuboid
    height: 0.55
    length: 0.28 #0.3
    width: 0.6
    flat_top_surface: 1
    sticky-region-x: 0.0 # from the center
    sticky-region-y: 0.0 # from the center
  floor:
    shape: 1
    height: 0.0001
    length: 10000000  # effectively infinite
    width: 10000000
    flat_top_surface: 0
  cup:
    shape: 2 # cylinder
    height: 0.05
    length: 0.15
    width: 0.15
    placeable: 1
  ball:
    shape: 2 # cylinder
    height: 0.06
    length: 0.06
    width: 0.06
    placeable: 1 

